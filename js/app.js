// Generated by CoffeeScript 1.6.3
var App, Bonder, sammy;

sammy = Sammy('body', function() {
  this.get('#/', function() {
    return false;
  });
  this.get('#/report', function() {
    $('#downtime_diag').addClass('hidden');
    this.redirect("#/");
    return false;
  });
  return false;
});

App = (function() {
  function App(ip) {
    this.ip = ip;
    this.machineNameContainer = $('#machine-name');
    this.clock = new StopWatch($('#downtime-start'), 60000);
    this.bonder = new Bonder({
      ip: this.ip
    });
    this.renderName();
    this.loadCurrentState();
  }

  App.prototype.loadCurrentState = function() {
    return this.bonder.fetch({
      success: function(model, response, options) {
        if (response.currentTimer != null) {
          app.timerStart(response.currentTimer);
        }
        return app.renderName();
      },
      error: function(model, response, options) {
        $('#machine-setup').removeClass('hidden');
        $('.jumbotron').addClass('hidden');
        return $('.downtime').addClass('hidden');
      }
    });
  };

  App.prototype.renderName = function() {
    var nameDisplay;
    nameDisplay = this.bonder.attributes.name != null ? this.bonder.attributes.name : this.ip;
    return this.machineNameContainer.html(nameDisplay);
  };

  App.prototype.timerStart = function(miliseconds) {
    return this.bonder.set('currentTimer', this.clock.start(miliseconds));
  };

  return App;

})();

Bonder = Backbone.Model.extend({
  defaults: {
    name: '',
    ip: ''
  },
  url: 'bonder.php/bonder'
});

$('#save-machine-data').click(function(e) {
  e.preventDefault();
  app.bonder.set('name', $('#bonder-name').val());
  app.bonder.set('enviroment', $('[name=enviroment]').val());
  return app.bonder.save();
});
